/**
 * Copyright 2012-2015 ContactLab, Italy
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.contactlab.api.ws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import com.contactlab.api.ws.domain.ActivityStatus;
import com.contactlab.api.ws.domain.Attachment;
import com.contactlab.api.ws.domain.AuthToken;
import com.contactlab.api.ws.domain.Campaign;
import com.contactlab.api.ws.domain.CampaignAttributes;
import com.contactlab.api.ws.domain.CampaignFeedback;
import com.contactlab.api.ws.domain.CampaignLookupPreferences;
import com.contactlab.api.ws.domain.CampaignNote;
import com.contactlab.api.ws.domain.CampaignNotes;
import com.contactlab.api.ws.domain.Campaigns;
import com.contactlab.api.ws.domain.Channel;
import com.contactlab.api.ws.domain.CommunicationCategory;
import com.contactlab.api.ws.domain.DeliveryFeedback;
import com.contactlab.api.ws.domain.DeliveryStatus;
import com.contactlab.api.ws.domain.DetailedRequestStatus;
import com.contactlab.api.ws.domain.LookupPreferences;
import com.contactlab.api.ws.domain.Message;
import com.contactlab.api.ws.domain.MessageModels;
import com.contactlab.api.ws.domain.PageBuilderPages;
import com.contactlab.api.ws.domain.PageBuilderTemplates;
import com.contactlab.api.ws.domain.Pagination;
import com.contactlab.api.ws.domain.SendImmediateOptions;
import com.contactlab.api.ws.domain.SplitTestCampaign;
import com.contactlab.api.ws.domain.Subscriber;
import com.contactlab.api.ws.domain.SubscriberAttribute;
import com.contactlab.api.ws.domain.SubscriberAttributeFilter;
import com.contactlab.api.ws.domain.SubscriberSource;
import com.contactlab.api.ws.domain.SubscriberSourceDescription;
import com.contactlab.api.ws.domain.SubscriberSourceFilter;
import com.contactlab.api.ws.domain.SubscriberSourceFilters;
import com.contactlab.api.ws.domain.SubscriberSources;
import com.contactlab.api.ws.domain.Subscribers;
import com.contactlab.api.ws.domain.SubscriptionAttributes;
import com.contactlab.api.ws.domain.Subscriptions;
import com.contactlab.api.ws.domain.TrackedLink;
import com.contactlab.api.ws.domain.XMLDeliveryInfos;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.7-b01-
 * Generated source version: 2.1
 * 
 */
@WebService(name = "ClabService", targetNamespace = "http://ws.api.contactlab.com/")
@XmlSeeAlso({
    com.contactlab.api.ws.ObjectFactory.class,
    com.contactlab.api.ws.domain.ObjectFactory.class
})
public interface ClabService {


    /**
     * 
     * @param filterId
     * @param useBaseFilter
     * @param whereAttribute
     * @param sourceIdentifier
     * @param pagination
     * @param selectedAttribute
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.Subscribers
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findSubscribersBy", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindSubscribersBy")
    @ResponseWrapper(localName = "findSubscribersByResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindSubscribersByResponse")
    public Subscribers findSubscribersBy(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "sourceIdentifier", targetNamespace = "")
        int sourceIdentifier,
        @WebParam(name = "filterId", targetNamespace = "")
        Integer filterId,
        @WebParam(name = "useBaseFilter", targetNamespace = "")
        boolean useBaseFilter,
        @WebParam(name = "selectedAttribute", targetNamespace = "")
        List<String> selectedAttribute,
        @WebParam(name = "whereAttribute", targetNamespace = "")
        List<SubscriberAttributeFilter> whereAttribute,
        @WebParam(name = "pagination", targetNamespace = "")
        Pagination pagination);

    /**
     * 
     * @param sourceIdentifier
     * @param token
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "countSubscribers", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.CountSubscribers")
    @ResponseWrapper(localName = "countSubscribersResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.CountSubscribersResponse")
    public Integer countSubscribers(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "sourceIdentifier", targetNamespace = "")
        int sourceIdentifier);

    /**
     * 
     * @param filterId
     * @param whereAttribute
     * @param useBaseFilter
     * @param fieldsOnDistinct
     * @param sourceIdentifier
     * @param token
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "countSubscribersBy", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.CountSubscribersBy")
    @ResponseWrapper(localName = "countSubscribersByResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.CountSubscribersByResponse")
    public int countSubscribersBy(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "sourceIdentifier", targetNamespace = "")
        int sourceIdentifier,
        @WebParam(name = "filterId", targetNamespace = "")
        Integer filterId,
        @WebParam(name = "whereAttribute", targetNamespace = "")
        List<SubscriberAttributeFilter> whereAttribute,
        @WebParam(name = "fieldsOnDistinct", targetNamespace = "")
        List<String> fieldsOnDistinct,
        @WebParam(name = "useBaseFilter", targetNamespace = "")
        boolean useBaseFilter);

    /**
     * 
     * @param fileName
     * @param testCampaignIdentifier
     * @param campaignIdentifier
     * @param overwrite
     * @param content
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "publishOnWeb", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.PublishOnWeb")
    @ResponseWrapper(localName = "publishOnWebResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.PublishOnWebResponse")
    public String publishOnWeb(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "campaignIdentifier", targetNamespace = "")
        Integer campaignIdentifier,
        @WebParam(name = "testCampaignIdentifier", targetNamespace = "")
        Integer testCampaignIdentifier,
        @WebParam(name = "fileName", targetNamespace = "")
        String fileName,
        @WebParam(name = "content", targetNamespace = "")
        byte[] content,
        @WebParam(name = "overwrite", targetNamespace = "")
        boolean overwrite);

    /**
     * 
     * @param token
     * @return
     *     returns java.util.List<com.contactlab.api.ws.domain.CommunicationCategory>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAvailableCommunicationCategories", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetAvailableCommunicationCategories")
    @ResponseWrapper(localName = "getAvailableCommunicationCategoriesResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetAvailableCommunicationCategoriesResponse")
    public List<CommunicationCategory> getAvailableCommunicationCategories(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token);

    /**
     * 
     * @param campaignIdentifier
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.DeliveryStatus
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCampaignDeliveryStatus", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetCampaignDeliveryStatus")
    @ResponseWrapper(localName = "getCampaignDeliveryStatusResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetCampaignDeliveryStatusResponse")
    public DeliveryStatus getCampaignDeliveryStatus(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "campaignIdentifier", targetNamespace = "")
        int campaignIdentifier);

    /**
     * 
     * @param sourceIdentifier
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.SubscriberSourceDescription
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSubscriberSourceDescription", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetSubscriberSourceDescription")
    @ResponseWrapper(localName = "getSubscriberSourceDescriptionResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetSubscriberSourceDescriptionResponse")
    public SubscriberSourceDescription getSubscriberSourceDescription(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "sourceIdentifier", targetNamespace = "")
        int sourceIdentifier);

    /**
     * 
     * @param subscriberSourceId
     * @param token
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isSubscriberSourceLocked", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.IsSubscriberSourceLocked")
    @ResponseWrapper(localName = "isSubscriberSourceLockedResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.IsSubscriberSourceLockedResponse")
    public boolean isSubscriberSourceLocked(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "subscriberSourceId", targetNamespace = "")
        int subscriberSourceId);

    /**
     * 
     * @param campaignId
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.Message
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findMessageByCampaignId", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindMessageByCampaignId")
    @ResponseWrapper(localName = "findMessageByCampaignIdResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindMessageByCampaignIdResponse")
    public Message findMessageByCampaignId(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "campaignId", targetNamespace = "")
        int campaignId);

    /**
     * 
     * @param campaignId
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.Message
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findMessageInfoByCampaignId", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindMessageInfoByCampaignId")
    @ResponseWrapper(localName = "findMessageInfoByCampaignIdResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindMessageInfoByCampaignIdResponse")
    public Message findMessageInfoByCampaignId(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "campaignId", targetNamespace = "")
        int campaignId);

    /**
     * 
     * @param lookupPrefs
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.MessageModels
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findMessages", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindMessages")
    @ResponseWrapper(localName = "findMessagesResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindMessagesResponse")
    public MessageModels findMessages(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "lookupPrefs", targetNamespace = "")
        LookupPreferences lookupPrefs);

    /**
     * 
     * @param lookupPrefs
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.MessageModels
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findMessagesInfo", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindMessagesInfo")
    @ResponseWrapper(localName = "findMessagesInfoResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindMessagesInfoResponse")
    public MessageModels findMessagesInfo(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "lookupPrefs", targetNamespace = "")
        LookupPreferences lookupPrefs);

    /**
     * 
     * @param lookupPrefs
     * @param campaignName
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.MessageModels
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findMessagesByCampaignName", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindMessagesByCampaignName")
    @ResponseWrapper(localName = "findMessagesByCampaignNameResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindMessagesByCampaignNameResponse")
    public MessageModels findMessagesByCampaignName(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "campaignName", targetNamespace = "")
        String campaignName,
        @WebParam(name = "lookupPrefs", targetNamespace = "")
        LookupPreferences lookupPrefs);

    /**
     * 
     * @param lookupPrefs
     * @param campaignName
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.MessageModels
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findMessagesInfoByCampaignName", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindMessagesInfoByCampaignName")
    @ResponseWrapper(localName = "findMessagesInfoByCampaignNameResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindMessagesInfoByCampaignNameResponse")
    public MessageModels findMessagesInfoByCampaignName(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "campaignName", targetNamespace = "")
        String campaignName,
        @WebParam(name = "lookupPrefs", targetNamespace = "")
        LookupPreferences lookupPrefs);

    /**
     * 
     * @param lookupPrefs
     * @param channel
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.MessageModels
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findMessagesByChannel", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindMessagesByChannel")
    @ResponseWrapper(localName = "findMessagesByChannelResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindMessagesByChannelResponse")
    public MessageModels findMessagesByChannel(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "channel", targetNamespace = "")
        Channel channel,
        @WebParam(name = "lookupPrefs", targetNamespace = "")
        LookupPreferences lookupPrefs);

    /**
     * 
     * @param lookupPrefs
     * @param channel
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.MessageModels
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findMessagesInfoByChannel", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindMessagesInfoByChannel")
    @ResponseWrapper(localName = "findMessagesInfoByChannelResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindMessagesInfoByChannelResponse")
    public MessageModels findMessagesInfoByChannel(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "channel", targetNamespace = "")
        Channel channel,
        @WebParam(name = "lookupPrefs", targetNamespace = "")
        LookupPreferences lookupPrefs);

    /**
     * 
     * @param sourceIdentifier
     * @param subscriber
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.Subscriber
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateSubscriber", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.UpdateSubscriber")
    @ResponseWrapper(localName = "updateSubscriberResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.UpdateSubscriberResponse")
    public Subscriber updateSubscriber(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "sourceIdentifier", targetNamespace = "")
        int sourceIdentifier,
        @WebParam(name = "subscriber", targetNamespace = "")
        Subscriber subscriber);

    /**
     * 
     * @param isSubscribed
     * @param webFormCode
     * @param subscriberIdentifier
     * @param token
     */
    @WebMethod
    @RequestWrapper(localName = "modifySubscriberSubscriptionStatus", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.ModifySubscriberSubscriptionStatus")
    @ResponseWrapper(localName = "modifySubscriberSubscriptionStatusResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.ModifySubscriberSubscriptionStatusResponse")
    public void modifySubscriberSubscriptionStatus(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "webFormCode", targetNamespace = "")
        String webFormCode,
        @WebParam(name = "subscriberIdentifier", targetNamespace = "")
        int subscriberIdentifier,
        @WebParam(name = "isSubscribed", targetNamespace = "")
        boolean isSubscribed);

    /**
     * 
     * @param note
     * @param campaignIdentifier
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.CampaignNote
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addCampaignNote", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.AddCampaignNote")
    @ResponseWrapper(localName = "addCampaignNoteResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.AddCampaignNoteResponse")
    public CampaignNote addCampaignNote(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "campaignIdentifier", targetNamespace = "")
        int campaignIdentifier,
        @WebParam(name = "note", targetNamespace = "")
        CampaignNote note);

    /**
     * 
     * @param campaignIdentifier
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.CampaignNotes
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findNotesByCampaign", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindNotesByCampaign")
    @ResponseWrapper(localName = "findNotesByCampaignResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindNotesByCampaignResponse")
    public CampaignNotes findNotesByCampaign(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "campaignIdentifier", targetNamespace = "")
        int campaignIdentifier);

    /**
     * 
     * @param attachments
     * @param campaignIdentifier
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.Attachment
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addAttachment", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.AddAttachment")
    @ResponseWrapper(localName = "addAttachmentResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.AddAttachmentResponse")
    public Attachment addAttachment(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "campaignIdentifier", targetNamespace = "")
        int campaignIdentifier,
        @WebParam(name = "attachments", targetNamespace = "")
        Attachment attachments);

    /**
     * 
     * @param campaignIdentifier
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.CampaignFeedback
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCampaignFeedback", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetCampaignFeedback")
    @ResponseWrapper(localName = "getCampaignFeedbackResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetCampaignFeedbackResponse")
    public CampaignFeedback getCampaignFeedback(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "campaignIdentifier", targetNamespace = "")
        int campaignIdentifier);

    /**
     * 
     * @param campaignIdentifier
     * @param token
     */
    @WebMethod
    @RequestWrapper(localName = "requestCampaignFeedbackReport", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.RequestCampaignFeedbackReport")
    @ResponseWrapper(localName = "requestCampaignFeedbackReportResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.RequestCampaignFeedbackReportResponse")
    public void requestCampaignFeedbackReport(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "campaignIdentifier", targetNamespace = "")
        int campaignIdentifier);

    /**
     * 
     * @param reference
     * @param fileName
     * @param overwrite
     * @param content
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "uploadMediaContent", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.UploadMediaContent")
    @ResponseWrapper(localName = "uploadMediaContentResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.UploadMediaContentResponse")
    public String uploadMediaContent(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "reference", targetNamespace = "")
        String reference,
        @WebParam(name = "fileName", targetNamespace = "")
        String fileName,
        @WebParam(name = "content", targetNamespace = "")
        byte[] content,
        @WebParam(name = "overwrite", targetNamespace = "")
        boolean overwrite);

    /**
     * 
     * @param campaignIdentifier
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.Campaign
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCampaign", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetCampaign")
    @ResponseWrapper(localName = "getCampaignResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetCampaignResponse")
    public Campaign getCampaign(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "campaignIdentifier", targetNamespace = "")
        int campaignIdentifier);

    /**
     * 
     * @param filterIdentifier
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.SubscriberSourceFilter
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSubscriberSourceFilter", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetSubscriberSourceFilter")
    @ResponseWrapper(localName = "getSubscriberSourceFilterResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetSubscriberSourceFilterResponse")
    public SubscriberSourceFilter getSubscriberSourceFilter(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "filterIdentifier", targetNamespace = "")
        int filterIdentifier);

    /**
     * 
     * @param filter
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.SubscriberSourceFilter
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addSubscriberSourceFilter", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.AddSubscriberSourceFilter")
    @ResponseWrapper(localName = "addSubscriberSourceFilterResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.AddSubscriberSourceFilterResponse")
    public SubscriberSourceFilter addSubscriberSourceFilter(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "filter", targetNamespace = "")
        SubscriberSourceFilter filter);

    /**
     * 
     * @param sourceIdentifier
     * @param lookupPrefs
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.SubscriberSourceFilters
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findFiltersBySubscriberSource", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindFiltersBySubscriberSource")
    @ResponseWrapper(localName = "findFiltersBySubscriberSourceResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindFiltersBySubscriberSourceResponse")
    public SubscriberSourceFilters findFiltersBySubscriberSource(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "sourceIdentifier", targetNamespace = "")
        int sourceIdentifier,
        @WebParam(name = "lookupPrefs", targetNamespace = "")
        LookupPreferences lookupPrefs);

    /**
     * 
     * @param newName
     * @param filterIdentifier
     * @param token
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "renameSubscriberSourceFilter", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.RenameSubscriberSourceFilter")
    @ResponseWrapper(localName = "renameSubscriberSourceFilterResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.RenameSubscriberSourceFilterResponse")
    public boolean renameSubscriberSourceFilter(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "filterIdentifier", targetNamespace = "")
        int filterIdentifier,
        @WebParam(name = "newName", targetNamespace = "")
        String newName);

    /**
     * 
     * @param sourceIdentifier
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.SubscriberSource
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSubscriberSource", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetSubscriberSource")
    @ResponseWrapper(localName = "getSubscriberSourceResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetSubscriberSourceResponse")
    public SubscriberSource getSubscriberSource(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "sourceIdentifier", targetNamespace = "")
        int sourceIdentifier);

    /**
     * 
     * @param lookupPrefs
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.SubscriberSources
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findSubscriberSources", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindSubscriberSources")
    @ResponseWrapper(localName = "findSubscriberSourcesResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindSubscriberSourcesResponse")
    public SubscriberSources findSubscriberSources(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "lookupPrefs", targetNamespace = "")
        LookupPreferences lookupPrefs);

    /**
     * 
     * @param modelId
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.Message
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMessageModelById", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetMessageModelById")
    @ResponseWrapper(localName = "getMessageModelByIdResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetMessageModelByIdResponse")
    public Message getMessageModelById(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "modelId", targetNamespace = "")
        int modelId);

    /**
     * 
     * @param model
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.Message
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createMessageModel", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.CreateMessageModel")
    @ResponseWrapper(localName = "createMessageModelResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.CreateMessageModelResponse")
    public Message createMessageModel(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "model", targetNamespace = "")
        Message model);

    /**
     * 
     * @param lookupPrefs
     * @param channel
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.MessageModels
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findMessageModels", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindMessageModels")
    @ResponseWrapper(localName = "findMessageModelsResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindMessageModelsResponse")
    public MessageModels findMessageModels(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "channel", targetNamespace = "")
        Channel channel,
        @WebParam(name = "lookupPrefs", targetNamespace = "")
        LookupPreferences lookupPrefs);

    /**
     * 
     * @param sourceId
     * @param lookupPrefs
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.MessageModels
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findMessageModelsBySubscriberSource", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindMessageModelsBySubscriberSource")
    @ResponseWrapper(localName = "findMessageModelsBySubscriberSourceResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindMessageModelsBySubscriberSourceResponse")
    public MessageModels findMessageModelsBySubscriberSource(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "sourceId", targetNamespace = "")
        int sourceId,
        @WebParam(name = "lookupPrefs", targetNamespace = "")
        LookupPreferences lookupPrefs);

    /**
     * 
     * @param pagination
     * @param attributes
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.Subscriptions
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findSubscriptionsBy", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindSubscriptionsBy")
    @ResponseWrapper(localName = "findSubscriptionsByResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindSubscriptionsByResponse")
    public Subscriptions findSubscriptionsBy(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "attributes", targetNamespace = "")
        SubscriptionAttributes attributes,
        @WebParam(name = "pagination", targetNamespace = "")
        Pagination pagination);

    /**
     * 
     * @param language
     * @param subscriptionId
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUnsubscribeLink", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetUnsubscribeLink")
    @ResponseWrapper(localName = "getUnsubscribeLinkResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetUnsubscribeLinkResponse")
    public String getUnsubscribeLink(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "subscriptionId", targetNamespace = "")
        Integer subscriptionId,
        @WebParam(name = "language", targetNamespace = "")
        String language);

    /**
     * 
     * @param enable
     * @param campaignIdentifier
     * @param periodicity
     * @param token
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "setCampaignRecurrency", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SetCampaignRecurrency")
    @ResponseWrapper(localName = "setCampaignRecurrencyResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SetCampaignRecurrencyResponse")
    public int setCampaignRecurrency(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "campaignIdentifier", targetNamespace = "")
        int campaignIdentifier,
        @WebParam(name = "periodicity", targetNamespace = "")
        String periodicity,
        @WebParam(name = "enable", targetNamespace = "")
        boolean enable);

    /**
     * 
     * @param campaignIdentifier
     * @param token
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendCampaign", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendCampaign")
    @ResponseWrapper(localName = "sendCampaignResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendCampaignResponse")
    public Integer sendCampaign(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "campaignIdentifier", targetNamespace = "")
        int campaignIdentifier);

    /**
     * 
     * @param hours
     * @param mail
     * @param campaignIdentifier
     * @param token
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendSplitTest", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendSplitTest")
    @ResponseWrapper(localName = "sendSplitTestResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendSplitTestResponse")
    public Integer sendSplitTest(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "campaignIdentifier", targetNamespace = "")
        int campaignIdentifier,
        @WebParam(name = "hours", targetNamespace = "")
        Integer hours,
        @WebParam(name = "mail", targetNamespace = "")
        Boolean mail);

    /**
     * 
     * @param campaignIdentifier
     * @param notBefore
     * @param token
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "cloneAndSendCampaign", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.CloneAndSendCampaign")
    @ResponseWrapper(localName = "cloneAndSendCampaignResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.CloneAndSendCampaignResponse")
    public Integer cloneAndSendCampaign(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "campaignIdentifier", targetNamespace = "")
        int campaignIdentifier,
        @WebParam(name = "notBefore", targetNamespace = "")
        XMLGregorianCalendar notBefore);

    /**
     * 
     * @param requestIdentifier
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.ActivityStatus
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRequestStatus", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetRequestStatus")
    @ResponseWrapper(localName = "getRequestStatusResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetRequestStatusResponse")
    public ActivityStatus getRequestStatus(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "requestIdentifier", targetNamespace = "")
        int requestIdentifier);

    /**
     * 
     * @param campaign
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.Campaign
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createCampaign", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.CreateCampaign")
    @ResponseWrapper(localName = "createCampaignResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.CreateCampaignResponse")
    public Campaign createCampaign(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "campaign", targetNamespace = "")
        Campaign campaign);

    /**
     * 
     * @param xmlDeliveryStatus
     * @param lookupPrefs
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.XMLDeliveryInfos
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getXMLDeliveries", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetXMLDeliveries")
    @ResponseWrapper(localName = "getXMLDeliveriesResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetXMLDeliveriesResponse")
    public XMLDeliveryInfos getXMLDeliveries(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "xmlDeliveryStatus", targetNamespace = "")
        XmlDeliveryStatusType xmlDeliveryStatus,
        @WebParam(name = "lookupPrefs", targetNamespace = "")
        LookupPreferences lookupPrefs);

    /**
     * 
     * @param token
     * @param xmlDeliveryId
     * @return
     *     returns java.util.List<com.contactlab.api.ws.XmlDeliveryTransitionInfo>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getXMLDeliveryTransitions", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetXMLDeliveryTransitions")
    @ResponseWrapper(localName = "getXMLDeliveryTransitionsResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetXMLDeliveryTransitionsResponse")
    public List<XmlDeliveryTransitionInfo> getXMLDeliveryTransitions(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "xmlDeliveryId", targetNamespace = "")
        int xmlDeliveryId);

    /**
     * 
     * @param campaignIdentifier
     * @param token
     */
    @WebMethod
    @RequestWrapper(localName = "cancelCampaign", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.CancelCampaign")
    @ResponseWrapper(localName = "cancelCampaignResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.CancelCampaignResponse")
    public void cancelCampaign(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "campaignIdentifier", targetNamespace = "")
        int campaignIdentifier);

    /**
     * 
     * @param sourceIdentifier
     * @param subscriberIdentifier
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.Subscriber
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSubscriber", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetSubscriber")
    @ResponseWrapper(localName = "getSubscriberResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetSubscriberResponse")
    public Subscriber getSubscriber(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "sourceIdentifier", targetNamespace = "")
        int sourceIdentifier,
        @WebParam(name = "subscriberIdentifier", targetNamespace = "")
        int subscriberIdentifier);

    /**
     * 
     * @param sourceIdentifier
     * @param subscriber
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.Subscriber
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addSubscriber", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.AddSubscriber")
    @ResponseWrapper(localName = "addSubscriberResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.AddSubscriberResponse")
    public Subscriber addSubscriber(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "sourceIdentifier", targetNamespace = "")
        int sourceIdentifier,
        @WebParam(name = "subscriber", targetNamespace = "")
        Subscriber subscriber);

    /**
     * 
     * @param sourceIdentifier
     * @param subscribers
     * @param token
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addSubscribers", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.AddSubscribers")
    @ResponseWrapper(localName = "addSubscribersResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.AddSubscribersResponse")
    public int addSubscribers(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "sourceIdentifier", targetNamespace = "")
        int sourceIdentifier,
        @WebParam(name = "subscribers", targetNamespace = "")
        Subscribers subscribers);

    /**
     * 
     * @param sourceIdentifier
     * @param recipientIdentifier
     * @param token
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "removeSubscriber", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.RemoveSubscriber")
    @ResponseWrapper(localName = "removeSubscriberResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.RemoveSubscriberResponse")
    public boolean removeSubscriber(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "sourceIdentifier", targetNamespace = "")
        int sourceIdentifier,
        @WebParam(name = "recipientIdentifier", targetNamespace = "")
        int recipientIdentifier);

    /**
     * 
     * @param sourceIdentifier
     * @param filterIdentifier
     * @param lookupPrefs
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.Subscribers
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findSubscribersIncludedInFilter", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindSubscribersIncludedInFilter")
    @ResponseWrapper(localName = "findSubscribersIncludedInFilterResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindSubscribersIncludedInFilterResponse")
    public Subscribers findSubscribersIncludedInFilter(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "sourceIdentifier", targetNamespace = "")
        int sourceIdentifier,
        @WebParam(name = "filterIdentifier", targetNamespace = "")
        int filterIdentifier,
        @WebParam(name = "lookupPrefs", targetNamespace = "")
        LookupPreferences lookupPrefs);

    /**
     * 
     * @param campaignAttributes
     * @param pagination
     * @param selectedAttributes
     * @param channel
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.Campaigns
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findCampaignsBy", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindCampaignsBy")
    @ResponseWrapper(localName = "findCampaignsByResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindCampaignsByResponse")
    public Campaigns findCampaignsBy(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "channel", targetNamespace = "")
        Channel channel,
        @WebParam(name = "campaignAttributes", targetNamespace = "")
        CampaignAttributes campaignAttributes,
        @WebParam(name = "selectedAttributes", targetNamespace = "")
        List<String> selectedAttributes,
        @WebParam(name = "pagination", targetNamespace = "")
        Pagination pagination);

    /**
     * 
     * @param nameOrSubject
     * @param lookupPrefs
     * @param channel
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.Campaigns
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findCampaignsByNameOrSubject", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindCampaignsByNameOrSubject")
    @ResponseWrapper(localName = "findCampaignsByNameOrSubjectResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindCampaignsByNameOrSubjectResponse")
    public Campaigns findCampaignsByNameOrSubject(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "channel", targetNamespace = "")
        Channel channel,
        @WebParam(name = "nameOrSubject", targetNamespace = "")
        String nameOrSubject,
        @WebParam(name = "lookupPrefs", targetNamespace = "")
        CampaignLookupPreferences lookupPrefs);

    /**
     * 
     * @param lookupPrefs
     * @param channel
     * @param token
     * @param status
     * @return
     *     returns com.contactlab.api.ws.domain.Campaigns
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findCampaignsByStatus", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindCampaignsByStatus")
    @ResponseWrapper(localName = "findCampaignsByStatusResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindCampaignsByStatusResponse")
    public Campaigns findCampaignsByStatus(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "channel", targetNamespace = "")
        Channel channel,
        @WebParam(name = "status", targetNamespace = "")
        DeliveryStatus status,
        @WebParam(name = "lookupPrefs", targetNamespace = "")
        CampaignLookupPreferences lookupPrefs);

    /**
     * 
     * @param lookupPrefs
     * @param channel
     * @param periodStart
     * @param token
     * @param periodEnd
     * @return
     *     returns com.contactlab.api.ws.domain.Campaigns
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findCampaignsSentBetween", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindCampaignsSentBetween")
    @ResponseWrapper(localName = "findCampaignsSentBetweenResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindCampaignsSentBetweenResponse")
    public Campaigns findCampaignsSentBetween(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "channel", targetNamespace = "")
        Channel channel,
        @WebParam(name = "periodStart", targetNamespace = "")
        XMLGregorianCalendar periodStart,
        @WebParam(name = "periodEnd", targetNamespace = "")
        XMLGregorianCalendar periodEnd,
        @WebParam(name = "lookupPrefs", targetNamespace = "")
        CampaignLookupPreferences lookupPrefs);

    /**
     * 
     * @param note
     * @param lookupPrefs
     * @param channel
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.Campaigns
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findCampaignsByNote", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindCampaignsByNote")
    @ResponseWrapper(localName = "findCampaignsByNoteResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindCampaignsByNoteResponse")
    public Campaigns findCampaignsByNote(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "channel", targetNamespace = "")
        Channel channel,
        @WebParam(name = "note", targetNamespace = "")
        CampaignNote note,
        @WebParam(name = "lookupPrefs", targetNamespace = "")
        CampaignLookupPreferences lookupPrefs);

    /**
     * 
     * @param modelIdentifier
     * @param lookupPrefs
     * @param channel
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.Campaigns
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findCampaignsByModel", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindCampaignsByModel")
    @ResponseWrapper(localName = "findCampaignsByModelResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindCampaignsByModelResponse")
    public Campaigns findCampaignsByModel(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "channel", targetNamespace = "")
        Channel channel,
        @WebParam(name = "modelIdentifier", targetNamespace = "")
        int modelIdentifier,
        @WebParam(name = "lookupPrefs", targetNamespace = "")
        CampaignLookupPreferences lookupPrefs);

    /**
     * 
     * @param lookupPrefs
     * @param channel
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.Campaigns
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findTriggerableCampaigns", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindTriggerableCampaigns")
    @ResponseWrapper(localName = "findTriggerableCampaignsResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindTriggerableCampaignsResponse")
    public Campaigns findTriggerableCampaigns(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "channel", targetNamespace = "")
        Channel channel,
        @WebParam(name = "lookupPrefs", targetNamespace = "")
        CampaignLookupPreferences lookupPrefs);

    /**
     * 
     * @param lookupPrefs
     * @param channel
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.Campaigns
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findPeriodicCampaigns", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindPeriodicCampaigns")
    @ResponseWrapper(localName = "findPeriodicCampaignsResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindPeriodicCampaignsResponse")
    public Campaigns findPeriodicCampaigns(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "channel", targetNamespace = "")
        Channel channel,
        @WebParam(name = "lookupPrefs", targetNamespace = "")
        CampaignLookupPreferences lookupPrefs);

    /**
     * 
     * @param lookupPrefs
     * @param channel
     * @param subscriberSourceFilterId
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.Campaigns
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findCampaignsBySubscriberSourceFilter", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindCampaignsBySubscriberSourceFilter")
    @ResponseWrapper(localName = "findCampaignsBySubscriberSourceFilterResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindCampaignsBySubscriberSourceFilterResponse")
    public Campaigns findCampaignsBySubscriberSourceFilter(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "channel", targetNamespace = "")
        Channel channel,
        @WebParam(name = "subscriberSourceFilterId", targetNamespace = "")
        int subscriberSourceFilterId,
        @WebParam(name = "lookupPrefs", targetNamespace = "")
        CampaignLookupPreferences lookupPrefs);

    /**
     * 
     * @param dataExchangeConfigIdentifier
     * @param token
     */
    @WebMethod
    @RequestWrapper(localName = "startSubscriberDataExchange", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.StartSubscriberDataExchange")
    @ResponseWrapper(localName = "startSubscriberDataExchangeResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.StartSubscriberDataExchangeResponse")
    public void startSubscriberDataExchange(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "dataExchangeConfigIdentifier", targetNamespace = "")
        int dataExchangeConfigIdentifier);

    /**
     * 
     * @param dataExchangeConfigIdentifier
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.ActivityStatus
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSubscriberDataExchangeStatus", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetSubscriberDataExchangeStatus")
    @ResponseWrapper(localName = "getSubscriberDataExchangeStatusResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetSubscriberDataExchangeStatusResponse")
    public ActivityStatus getSubscriberDataExchangeStatus(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "dataExchangeConfigIdentifier", targetNamespace = "")
        int dataExchangeConfigIdentifier);

    /**
     * 
     * @param dataExchangeConfigIdentifier
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.DetailedRequestStatus
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSubscriberDataExchangeDetailedStatus", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetSubscriberDataExchangeDetailedStatus")
    @ResponseWrapper(localName = "getSubscriberDataExchangeDetailedStatusResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetSubscriberDataExchangeDetailedStatusResponse")
    public DetailedRequestStatus getSubscriberDataExchangeDetailedStatus(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "dataExchangeConfigIdentifier", targetNamespace = "")
        int dataExchangeConfigIdentifier);

    /**
     * 
     * @param sourceIdentifier
     * @param filterIdentifier
     * @param token
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "countSubscribersIncludedInFilter", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.CountSubscribersIncludedInFilter")
    @ResponseWrapper(localName = "countSubscribersIncludedInFilterResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.CountSubscribersIncludedInFilterResponse")
    public Integer countSubscribersIncludedInFilter(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "sourceIdentifier", targetNamespace = "")
        int sourceIdentifier,
        @WebParam(name = "filterIdentifier", targetNamespace = "")
        int filterIdentifier);

    /**
     * 
     * @param apiKey
     * @param userKey
     * @return
     *     returns com.contactlab.api.ws.domain.AuthToken
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "borrowToken", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.BorrowToken")
    @ResponseWrapper(localName = "borrowTokenResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.BorrowTokenResponse")
    public AuthToken borrowToken(
        @WebParam(name = "apiKey", targetNamespace = "")
        String apiKey,
        @WebParam(name = "userKey", targetNamespace = "")
        String userKey);

    /**
     * 
     * @param token
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "keepaliveToken", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.KeepaliveToken")
    @ResponseWrapper(localName = "keepaliveTokenResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.KeepaliveTokenResponse")
    public boolean keepaliveToken(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token);

    /**
     * 
     * @param token
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "invalidateToken", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.InvalidateToken")
    @ResponseWrapper(localName = "invalidateTokenResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.InvalidateTokenResponse")
    public boolean invalidateToken(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token);

    /**
     * 
     * @param campaignToSendId
     * @param token
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendSplitTestWinner", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendSplitTestWinner")
    @ResponseWrapper(localName = "sendSplitTestWinnerResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendSplitTestWinnerResponse")
    public Integer sendSplitTestWinner(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "campaignToSendId", targetNamespace = "")
        Integer campaignToSendId);

    /**
     * 
     * @param splitTestCampaign
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.SplitTestCampaign
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createSplitTest", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.CreateSplitTest")
    @ResponseWrapper(localName = "createSplitTestResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.CreateSplitTestResponse")
    public SplitTestCampaign createSplitTest(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "splitTestCampaign", targetNamespace = "")
        SplitTestCampaign splitTestCampaign);

    /**
     * 
     * @param lookupPrefs
     * @param channel
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.Campaigns
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findCampaigns", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindCampaigns")
    @ResponseWrapper(localName = "findCampaignsResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindCampaignsResponse")
    public Campaigns findCampaigns(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "channel", targetNamespace = "")
        Channel channel,
        @WebParam(name = "lookupPrefs", targetNamespace = "")
        CampaignLookupPreferences lookupPrefs);

    /**
     * 
     * @param campaignIdentifier
     * @param token
     * @return
     *     returns java.util.List<com.contactlab.api.ws.domain.Attachment>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAttachmentByCampaignId", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetAttachmentByCampaignId")
    @ResponseWrapper(localName = "getAttachmentByCampaignIdResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetAttachmentByCampaignIdResponse")
    public List<Attachment> getAttachmentByCampaignId(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "campaignIdentifier", targetNamespace = "")
        int campaignIdentifier);

    /**
     * 
     * @param campaignId
     * @param categoryId
     * @param token
     * @return
     *     returns java.util.List<com.contactlab.api.ws.domain.TrackedLink>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTrackedLinks", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetTrackedLinks")
    @ResponseWrapper(localName = "getTrackedLinksResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetTrackedLinksResponse")
    public List<TrackedLink> getTrackedLinks(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "campaignId", targetNamespace = "")
        int campaignId,
        @WebParam(name = "categoryId", targetNamespace = "")
        int categoryId);

    /**
     * 
     * @param campaignIdentifier
     * @param subscriberIdentifier
     * @param token
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "triggerDeliveryById", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.TriggerDeliveryById")
    @ResponseWrapper(localName = "triggerDeliveryByIdResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.TriggerDeliveryByIdResponse")
    public Integer triggerDeliveryById(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "campaignIdentifier", targetNamespace = "")
        int campaignIdentifier,
        @WebParam(name = "subscriberIdentifier", targetNamespace = "")
        int subscriberIdentifier);

    /**
     * 
     * @param campaignName
     * @param subscriberIdentifier
     * @param token
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "triggerDeliveryByAlias", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.TriggerDeliveryByAlias")
    @ResponseWrapper(localName = "triggerDeliveryByAliasResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.TriggerDeliveryByAliasResponse")
    public Integer triggerDeliveryByAlias(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "campaignName", targetNamespace = "")
        String campaignName,
        @WebParam(name = "subscriberIdentifier", targetNamespace = "")
        int subscriberIdentifier);

    /**
     * 
     * @param token
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createSelection", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.CreateSelection")
    @ResponseWrapper(localName = "createSelectionResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.CreateSelectionResponse")
    public int createSelection(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token);

    /**
     * 
     * @param subscriberSourceId
     * @param token
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createSelectionBySubscriberSourceId", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.CreateSelectionBySubscriberSourceId")
    @ResponseWrapper(localName = "createSelectionBySubscriberSourceIdResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.CreateSelectionBySubscriberSourceIdResponse")
    public int createSelectionBySubscriberSourceId(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "subscriberSourceId", targetNamespace = "")
        int subscriberSourceId);

    /**
     * 
     * @param plannedTo
     * @param selectionId
     * @param token
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "startSelection", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.StartSelection")
    @ResponseWrapper(localName = "startSelectionResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.StartSelectionResponse")
    public int startSelection(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "selectionId", targetNamespace = "")
        int selectionId,
        @WebParam(name = "plannedTo", targetNamespace = "")
        XMLGregorianCalendar plannedTo);

    /**
     * 
     * @param recipientIds
     * @param selectionId
     * @param isTest
     * @param token
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addSelectionSubscribers", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.AddSelectionSubscribers")
    @ResponseWrapper(localName = "addSelectionSubscribersResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.AddSelectionSubscribersResponse")
    public int addSelectionSubscribers(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "selectionId", targetNamespace = "")
        int selectionId,
        @WebParam(name = "isTest", targetNamespace = "")
        boolean isTest,
        @WebParam(name = "recipientIds", targetNamespace = "")
        List<Integer> recipientIds);

    /**
     * 
     * @param apiKey
     * @param uuid
     * @param userKey
     * @return
     *     returns java.util.List<java.lang.Long>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDeliveryMailQ", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetDeliveryMailQ")
    @ResponseWrapper(localName = "getDeliveryMailQResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetDeliveryMailQResponse")
    public List<Long> getDeliveryMailQ(
        @WebParam(name = "apiKey", targetNamespace = "")
        String apiKey,
        @WebParam(name = "userKey", targetNamespace = "")
        String userKey,
        @WebParam(name = "uuid", targetNamespace = "")
        String uuid);

    /**
     * 
     * @param apiKey
     * @param uuid
     * @param userKey
     * @return
     *     returns java.util.List<com.contactlab.api.ws.domain.DeliveryFeedback>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDeliveryFeedback", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetDeliveryFeedback")
    @ResponseWrapper(localName = "getDeliveryFeedbackResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetDeliveryFeedbackResponse")
    public List<DeliveryFeedback> getDeliveryFeedback(
        @WebParam(name = "apiKey", targetNamespace = "")
        String apiKey,
        @WebParam(name = "userKey", targetNamespace = "")
        String userKey,
        @WebParam(name = "uuid", targetNamespace = "")
        String uuid);

    /**
     * 
     * @param subscriberSource
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.SubscriberSource
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addSubscriberSource", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.AddSubscriberSource")
    @ResponseWrapper(localName = "addSubscriberSourceResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.AddSubscriberSourceResponse")
    public SubscriberSource addSubscriberSource(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "subscriberSource", targetNamespace = "")
        SubscriberSource subscriberSource);

    /**
     * 
     * @param sourceIdentifier
     * @param lookupPrefs
     * @param attribute
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.Subscribers
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findSubscribers", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindSubscribers")
    @ResponseWrapper(localName = "findSubscribersResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindSubscribersResponse")
    public Subscribers findSubscribers(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "sourceIdentifier", targetNamespace = "")
        int sourceIdentifier,
        @WebParam(name = "attribute", targetNamespace = "")
        SubscriberAttribute attribute,
        @WebParam(name = "lookupPrefs", targetNamespace = "")
        LookupPreferences lookupPrefs);

    /**
     * 
     * @param recipient
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCryptoKey", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetCryptoKey")
    @ResponseWrapper(localName = "getCryptoKeyResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetCryptoKeyResponse")
    public String getCryptoKey(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "recipient", targetNamespace = "")
        String recipient);

    /**
     * 
     * @param userData
     * @param apiKey
     * @param campaign
     * @param userKey
     * @return
     *     returns long
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendImmediateMessageSDataCData", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateMessageSDataCData")
    @ResponseWrapper(localName = "sendImmediateMessageSDataCDataResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateMessageSDataCDataResponse")
    public long sendImmediateMessageSDataCData(
        @WebParam(name = "apiKey", targetNamespace = "")
        String apiKey,
        @WebParam(name = "userKey", targetNamespace = "")
        String userKey,
        @WebParam(name = "campaign", targetNamespace = "")
        Campaign campaign,
        @WebParam(name = "userData", targetNamespace = "")
        Subscriber userData);

    /**
     * 
     * @param sourceIdentifier
     * @param apiKey
     * @param campaign
     * @param userKey
     * @param subscriberIdentifier
     * @return
     *     returns long
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendImmediateMessageSIdCData", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateMessageSIdCData")
    @ResponseWrapper(localName = "sendImmediateMessageSIdCDataResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateMessageSIdCDataResponse")
    public long sendImmediateMessageSIdCData(
        @WebParam(name = "apiKey", targetNamespace = "")
        String apiKey,
        @WebParam(name = "userKey", targetNamespace = "")
        String userKey,
        @WebParam(name = "campaign", targetNamespace = "")
        Campaign campaign,
        @WebParam(name = "sourceIdentifier", targetNamespace = "")
        int sourceIdentifier,
        @WebParam(name = "subscriberIdentifier", targetNamespace = "")
        int subscriberIdentifier);

    /**
     * 
     * @param userData
     * @param attachments
     * @param apiKey
     * @param includeDefaultAttachments
     * @param campaign
     * @param userKey
     * @return
     *     returns long
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendImmediateMessageSDataCDataCA", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateMessageSDataCDataCA")
    @ResponseWrapper(localName = "sendImmediateMessageSDataCDataCAResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateMessageSDataCDataCAResponse")
    public long sendImmediateMessageSDataCDataCA(
        @WebParam(name = "apiKey", targetNamespace = "")
        String apiKey,
        @WebParam(name = "userKey", targetNamespace = "")
        String userKey,
        @WebParam(name = "campaign", targetNamespace = "")
        Campaign campaign,
        @WebParam(name = "userData", targetNamespace = "")
        Subscriber userData,
        @WebParam(name = "includeDefaultAttachments", targetNamespace = "")
        boolean includeDefaultAttachments,
        @WebParam(name = "attachments", targetNamespace = "")
        List<Attachment> attachments);

    /**
     * 
     * @param sourceIdentifier
     * @param attachments
     * @param apiKey
     * @param includeDefaultAttachments
     * @param campaign
     * @param userKey
     * @param subscriberIdentifier
     * @return
     *     returns long
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendImmediateMessageSIdCDataCA", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateMessageSIdCDataCA")
    @ResponseWrapper(localName = "sendImmediateMessageSIdCDataCAResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateMessageSIdCDataCAResponse")
    public long sendImmediateMessageSIdCDataCA(
        @WebParam(name = "apiKey", targetNamespace = "")
        String apiKey,
        @WebParam(name = "userKey", targetNamespace = "")
        String userKey,
        @WebParam(name = "campaign", targetNamespace = "")
        Campaign campaign,
        @WebParam(name = "sourceIdentifier", targetNamespace = "")
        int sourceIdentifier,
        @WebParam(name = "subscriberIdentifier", targetNamespace = "")
        int subscriberIdentifier,
        @WebParam(name = "includeDefaultAttachments", targetNamespace = "")
        boolean includeDefaultAttachments,
        @WebParam(name = "attachments", targetNamespace = "")
        List<Attachment> attachments);

    /**
     * 
     * @param subscriber
     * @param apiKey
     * @param campaign
     * @param sendImmediateOptions
     * @param userKey
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendImmediateByCampaignToSubscriber", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateByCampaignToSubscriber")
    @ResponseWrapper(localName = "sendImmediateByCampaignToSubscriberResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateByCampaignToSubscriberResponse")
    public String sendImmediateByCampaignToSubscriber(
        @WebParam(name = "apiKey", targetNamespace = "")
        String apiKey,
        @WebParam(name = "userKey", targetNamespace = "")
        String userKey,
        @WebParam(name = "campaign", targetNamespace = "")
        Campaign campaign,
        @WebParam(name = "subscriber", targetNamespace = "")
        Subscriber subscriber,
        @WebParam(name = "sendImmediateOptions", targetNamespace = "")
        SendImmediateOptions sendImmediateOptions);

    /**
     * 
     * @param sourceId
     * @param apiKey
     * @param campaign
     * @param subscriberId
     * @param sendImmediateOptions
     * @param userKey
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendImmediateByCampaignToSubscriberId", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateByCampaignToSubscriberId")
    @ResponseWrapper(localName = "sendImmediateByCampaignToSubscriberIdResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateByCampaignToSubscriberIdResponse")
    public String sendImmediateByCampaignToSubscriberId(
        @WebParam(name = "apiKey", targetNamespace = "")
        String apiKey,
        @WebParam(name = "userKey", targetNamespace = "")
        String userKey,
        @WebParam(name = "campaign", targetNamespace = "")
        Campaign campaign,
        @WebParam(name = "sourceId", targetNamespace = "")
        int sourceId,
        @WebParam(name = "subscriberId", targetNamespace = "")
        int subscriberId,
        @WebParam(name = "sendImmediateOptions", targetNamespace = "")
        SendImmediateOptions sendImmediateOptions);

    /**
     * 
     * @param pushTemplateEnvelope
     * @return
     *     returns com.contactlab.api.ws.PushTemplateEnvelope
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "unmarshalPushTemplateEnvelope", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.UnmarshalPushTemplateEnvelope")
    @ResponseWrapper(localName = "unmarshalPushTemplateEnvelopeResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.UnmarshalPushTemplateEnvelopeResponse")
    public PushTemplateEnvelope unmarshalPushTemplateEnvelope(
        @WebParam(name = "pushTemplateEnvelope", targetNamespace = "")
        String pushTemplateEnvelope);

    /**
     * 
     * @param hours
     * @param recipients
     * @param campaignIdentifier
     * @param token
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "scheduleCampaignFeedbackReport", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.ScheduleCampaignFeedbackReport")
    @ResponseWrapper(localName = "scheduleCampaignFeedbackReportResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.ScheduleCampaignFeedbackReportResponse")
    public boolean scheduleCampaignFeedbackReport(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "campaignIdentifier", targetNamespace = "")
        int campaignIdentifier,
        @WebParam(name = "recipients", targetNamespace = "")
        List<String> recipients,
        @WebParam(name = "hours", targetNamespace = "")
        Integer hours);

    /**
     * 
     * @param filterIdentifier
     * @param token
     */
    @WebMethod
    @RequestWrapper(localName = "archiveSubscriberSourceFilter", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.ArchiveSubscriberSourceFilter")
    @ResponseWrapper(localName = "archiveSubscriberSourceFilterResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.ArchiveSubscriberSourceFilterResponse")
    public void archiveSubscriberSourceFilter(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "filterIdentifier", targetNamespace = "")
        int filterIdentifier);

    /**
     * 
     * @param filterIdentifier
     * @param token
     */
    @WebMethod
    @RequestWrapper(localName = "reuseSubscriberSourceFilter", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.ReuseSubscriberSourceFilter")
    @ResponseWrapper(localName = "reuseSubscriberSourceFilterResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.ReuseSubscriberSourceFilterResponse")
    public void reuseSubscriberSourceFilter(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "filterIdentifier", targetNamespace = "")
        int filterIdentifier);

    /**
     * 
     * @param sourceIdentifier
     * @param lookupPrefs
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.SubscriberSourceFilters
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findArchivedFiltersBySubscriberSource", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindArchivedFiltersBySubscriberSource")
    @ResponseWrapper(localName = "findArchivedFiltersBySubscriberSourceResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindArchivedFiltersBySubscriberSourceResponse")
    public SubscriberSourceFilters findArchivedFiltersBySubscriberSource(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "sourceIdentifier", targetNamespace = "")
        int sourceIdentifier,
        @WebParam(name = "lookupPrefs", targetNamespace = "")
        LookupPreferences lookupPrefs);

    /**
     * 
     * @param filterIdentifier
     * @param token
     * @return
     *     returns com.contactlab.api.ws.domain.SubscriberSourceFilter
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getArchivedSubscriberSourceFilter", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetArchivedSubscriberSourceFilter")
    @ResponseWrapper(localName = "getArchivedSubscriberSourceFilterResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetArchivedSubscriberSourceFilterResponse")
    public SubscriberSourceFilter getArchivedSubscriberSourceFilter(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "filterIdentifier", targetNamespace = "")
        int filterIdentifier);

    /**
     * 
     * @param mailqId
     * @param isSubscribed
     * @param webFormCode
     * @param subscriberIdentifier
     * @param token
     */
    @WebMethod
    @RequestWrapper(localName = "modifySubscriberSubscriptionStatusByMailqId", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.ModifySubscriberSubscriptionStatusByMailqId")
    @ResponseWrapper(localName = "modifySubscriberSubscriptionStatusByMailqIdResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.ModifySubscriberSubscriptionStatusByMailqIdResponse")
    public void modifySubscriberSubscriptionStatusByMailqId(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "webFormCode", targetNamespace = "")
        String webFormCode,
        @WebParam(name = "subscriberIdentifier", targetNamespace = "")
        int subscriberIdentifier,
        @WebParam(name = "mailqId", targetNamespace = "")
        long mailqId,
        @WebParam(name = "isSubscribed", targetNamespace = "")
        boolean isSubscribed);

    /**
     * 
     * @param userData
     * @param apiKey
     * @param campaignIdentifier
     * @param userKey
     * @return
     *     returns long
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendImmediateMessage", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateMessage")
    @ResponseWrapper(localName = "sendImmediateMessageResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateMessageResponse")
    public long sendImmediateMessage(
        @WebParam(name = "apiKey", targetNamespace = "")
        String apiKey,
        @WebParam(name = "userKey", targetNamespace = "")
        String userKey,
        @WebParam(name = "campaignIdentifier", targetNamespace = "")
        int campaignIdentifier,
        @WebParam(name = "userData", targetNamespace = "")
        Subscriber userData);

    /**
     * 
     * @param sourceIdentifier
     * @param apiKey
     * @param campaignIdentifier
     * @param userKey
     * @param subscriberIdentifier
     * @return
     *     returns long
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendImmediateMessageSidCid", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateMessageSidCid")
    @ResponseWrapper(localName = "sendImmediateMessageSidCidResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateMessageSidCidResponse")
    public long sendImmediateMessageSidCid(
        @WebParam(name = "apiKey", targetNamespace = "")
        String apiKey,
        @WebParam(name = "userKey", targetNamespace = "")
        String userKey,
        @WebParam(name = "campaignIdentifier", targetNamespace = "")
        int campaignIdentifier,
        @WebParam(name = "sourceIdentifier", targetNamespace = "")
        int sourceIdentifier,
        @WebParam(name = "subscriberIdentifier", targetNamespace = "")
        int subscriberIdentifier);

    /**
     * 
     * @param campaignAlias
     * @param userData
     * @param apiKey
     * @param userKey
     * @return
     *     returns long
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendImmediateMessageSdataCAl", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateMessageSdataCAl")
    @ResponseWrapper(localName = "sendImmediateMessageSdataCAlResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateMessageSdataCAlResponse")
    public long sendImmediateMessageSdataCAl(
        @WebParam(name = "apiKey", targetNamespace = "")
        String apiKey,
        @WebParam(name = "userKey", targetNamespace = "")
        String userKey,
        @WebParam(name = "campaignAlias", targetNamespace = "")
        String campaignAlias,
        @WebParam(name = "userData", targetNamespace = "")
        Subscriber userData);

    /**
     * 
     * @param campaignAlias
     * @param sourceIdentifier
     * @param apiKey
     * @param userKey
     * @param subscriberIdentifier
     * @return
     *     returns long
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendImmediateMessageSidCAl", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateMessageSidCAl")
    @ResponseWrapper(localName = "sendImmediateMessageSidCAlResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateMessageSidCAlResponse")
    public long sendImmediateMessageSidCAl(
        @WebParam(name = "apiKey", targetNamespace = "")
        String apiKey,
        @WebParam(name = "userKey", targetNamespace = "")
        String userKey,
        @WebParam(name = "campaignAlias", targetNamespace = "")
        String campaignAlias,
        @WebParam(name = "sourceIdentifier", targetNamespace = "")
        int sourceIdentifier,
        @WebParam(name = "subscriberIdentifier", targetNamespace = "")
        int subscriberIdentifier);

    /**
     * 
     * @param userData
     * @param attachments
     * @param apiKey
     * @param includeDefaultAttachments
     * @param campaignIdentifier
     * @param userKey
     * @return
     *     returns long
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendImmediateMessageSDataCIdCA", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateMessageSDataCIdCA")
    @ResponseWrapper(localName = "sendImmediateMessageSDataCIdCAResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateMessageSDataCIdCAResponse")
    public long sendImmediateMessageSDataCIdCA(
        @WebParam(name = "apiKey", targetNamespace = "")
        String apiKey,
        @WebParam(name = "userKey", targetNamespace = "")
        String userKey,
        @WebParam(name = "campaignIdentifier", targetNamespace = "")
        int campaignIdentifier,
        @WebParam(name = "userData", targetNamespace = "")
        Subscriber userData,
        @WebParam(name = "includeDefaultAttachments", targetNamespace = "")
        boolean includeDefaultAttachments,
        @WebParam(name = "attachments", targetNamespace = "")
        List<Attachment> attachments);

    /**
     * 
     * @param sourceIdentifier
     * @param attachments
     * @param apiKey
     * @param includeDefaultAttachments
     * @param campaignIdentifier
     * @param userKey
     * @param subscriberIdentifier
     * @return
     *     returns long
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendImmediateMessageSidCidCA", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateMessageSidCidCA")
    @ResponseWrapper(localName = "sendImmediateMessageSidCidCAResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateMessageSidCidCAResponse")
    public long sendImmediateMessageSidCidCA(
        @WebParam(name = "apiKey", targetNamespace = "")
        String apiKey,
        @WebParam(name = "userKey", targetNamespace = "")
        String userKey,
        @WebParam(name = "campaignIdentifier", targetNamespace = "")
        int campaignIdentifier,
        @WebParam(name = "sourceIdentifier", targetNamespace = "")
        int sourceIdentifier,
        @WebParam(name = "subscriberIdentifier", targetNamespace = "")
        int subscriberIdentifier,
        @WebParam(name = "includeDefaultAttachments", targetNamespace = "")
        boolean includeDefaultAttachments,
        @WebParam(name = "attachments", targetNamespace = "")
        List<Attachment> attachments);

    /**
     * 
     * @param campaignAlias
     * @param userData
     * @param attachments
     * @param apiKey
     * @param includeDefaultAttachments
     * @param userKey
     * @return
     *     returns long
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendImmediateMessageSdataCAlCA", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateMessageSdataCAlCA")
    @ResponseWrapper(localName = "sendImmediateMessageSdataCAlCAResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateMessageSdataCAlCAResponse")
    public long sendImmediateMessageSdataCAlCA(
        @WebParam(name = "apiKey", targetNamespace = "")
        String apiKey,
        @WebParam(name = "userKey", targetNamespace = "")
        String userKey,
        @WebParam(name = "campaignAlias", targetNamespace = "")
        String campaignAlias,
        @WebParam(name = "userData", targetNamespace = "")
        Subscriber userData,
        @WebParam(name = "includeDefaultAttachments", targetNamespace = "")
        boolean includeDefaultAttachments,
        @WebParam(name = "attachments", targetNamespace = "")
        List<Attachment> attachments);

    /**
     * 
     * @param campaignAlias
     * @param sourceIdentifier
     * @param attachments
     * @param apiKey
     * @param includeDefaultAttachments
     * @param userKey
     * @param subscriberIdentifier
     * @return
     *     returns long
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendImmediateMessageSidCAlCA", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateMessageSidCAlCA")
    @ResponseWrapper(localName = "sendImmediateMessageSidCAlCAResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateMessageSidCAlCAResponse")
    public long sendImmediateMessageSidCAlCA(
        @WebParam(name = "apiKey", targetNamespace = "")
        String apiKey,
        @WebParam(name = "userKey", targetNamespace = "")
        String userKey,
        @WebParam(name = "campaignAlias", targetNamespace = "")
        String campaignAlias,
        @WebParam(name = "sourceIdentifier", targetNamespace = "")
        int sourceIdentifier,
        @WebParam(name = "subscriberIdentifier", targetNamespace = "")
        int subscriberIdentifier,
        @WebParam(name = "includeDefaultAttachments", targetNamespace = "")
        boolean includeDefaultAttachments,
        @WebParam(name = "attachments", targetNamespace = "")
        List<Attachment> attachments);

    /**
     * 
     * @param subscriber
     * @param apiKey
     * @param campaignId
     * @param sendImmediateOptions
     * @param userKey
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendImmediateByCampaignIdToSubscriber", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateByCampaignIdToSubscriber")
    @ResponseWrapper(localName = "sendImmediateByCampaignIdToSubscriberResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateByCampaignIdToSubscriberResponse")
    public String sendImmediateByCampaignIdToSubscriber(
        @WebParam(name = "apiKey", targetNamespace = "")
        String apiKey,
        @WebParam(name = "userKey", targetNamespace = "")
        String userKey,
        @WebParam(name = "campaignId", targetNamespace = "")
        int campaignId,
        @WebParam(name = "subscriber", targetNamespace = "")
        Subscriber subscriber,
        @WebParam(name = "sendImmediateOptions", targetNamespace = "")
        SendImmediateOptions sendImmediateOptions);

    /**
     * 
     * @param sourceId
     * @param apiKey
     * @param campaignId
     * @param subscriberId
     * @param sendImmediateOptions
     * @param userKey
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendImmediateByCampaignIdToSubscriberId", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateByCampaignIdToSubscriberId")
    @ResponseWrapper(localName = "sendImmediateByCampaignIdToSubscriberIdResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateByCampaignIdToSubscriberIdResponse")
    public String sendImmediateByCampaignIdToSubscriberId(
        @WebParam(name = "apiKey", targetNamespace = "")
        String apiKey,
        @WebParam(name = "userKey", targetNamespace = "")
        String userKey,
        @WebParam(name = "campaignId", targetNamespace = "")
        int campaignId,
        @WebParam(name = "sourceId", targetNamespace = "")
        int sourceId,
        @WebParam(name = "subscriberId", targetNamespace = "")
        int subscriberId,
        @WebParam(name = "sendImmediateOptions", targetNamespace = "")
        SendImmediateOptions sendImmediateOptions);

    /**
     * 
     * @param campaignAlias
     * @param subscriber
     * @param apiKey
     * @param sendImmediateOptions
     * @param userKey
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendImmediateByCampaignAliasToSubscriber", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateByCampaignAliasToSubscriber")
    @ResponseWrapper(localName = "sendImmediateByCampaignAliasToSubscriberResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateByCampaignAliasToSubscriberResponse")
    public String sendImmediateByCampaignAliasToSubscriber(
        @WebParam(name = "apiKey", targetNamespace = "")
        String apiKey,
        @WebParam(name = "userKey", targetNamespace = "")
        String userKey,
        @WebParam(name = "campaignAlias", targetNamespace = "")
        String campaignAlias,
        @WebParam(name = "subscriber", targetNamespace = "")
        Subscriber subscriber,
        @WebParam(name = "sendImmediateOptions", targetNamespace = "")
        SendImmediateOptions sendImmediateOptions);

    /**
     * 
     * @param sourceId
     * @param campaignAlias
     * @param apiKey
     * @param subscriberId
     * @param sendImmediateOptions
     * @param userKey
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendImmediateByCampaignAliasToSubscriberId", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateByCampaignAliasToSubscriberId")
    @ResponseWrapper(localName = "sendImmediateByCampaignAliasToSubscriberIdResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.SendImmediateByCampaignAliasToSubscriberIdResponse")
    public String sendImmediateByCampaignAliasToSubscriberId(
        @WebParam(name = "apiKey", targetNamespace = "")
        String apiKey,
        @WebParam(name = "userKey", targetNamespace = "")
        String userKey,
        @WebParam(name = "campaignAlias", targetNamespace = "")
        String campaignAlias,
        @WebParam(name = "sourceId", targetNamespace = "")
        int sourceId,
        @WebParam(name = "subscriberId", targetNamespace = "")
        int subscriberId,
        @WebParam(name = "sendImmediateOptions", targetNamespace = "")
        SendImmediateOptions sendImmediateOptions);

    /**
     * 
     * @param apiKey
     * @param uuid
     * @param userKey
     * @return
     *     returns java.util.List<com.contactlab.api.ws.DeliveryInformation>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDeliveryStatus", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetDeliveryStatus")
    @ResponseWrapper(localName = "getDeliveryStatusResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetDeliveryStatusResponse")
    public List<DeliveryInformation> getDeliveryStatus(
        @WebParam(name = "apiKey", targetNamespace = "")
        String apiKey,
        @WebParam(name = "userKey", targetNamespace = "")
        String userKey,
        @WebParam(name = "uuid", targetNamespace = "")
        String uuid);

    /**
     * 
     * @return
     *     returns com.contactlab.api.ws.PushTemplateEnvelope
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getEmptyPushTemplate", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetEmptyPushTemplate")
    @ResponseWrapper(localName = "getEmptyPushTemplateResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetEmptyPushTemplateResponse")
    public PushTemplateEnvelope getEmptyPushTemplate();

    /**
     * 
     * @param code
     * @param token
     * @return
     *     returns com.contactlab.api.ws.MobileApplication
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMobileApplicationByCode", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetMobileApplicationByCode")
    @ResponseWrapper(localName = "getMobileApplicationByCodeResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetMobileApplicationByCodeResponse")
    public MobileApplication getMobileApplicationByCode(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "code", targetNamespace = "")
        String code);

    /**
     * 
     * @param selectionId
     * @param token
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "commitSelection", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.CommitSelection")
    @ResponseWrapper(localName = "commitSelectionResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.CommitSelectionResponse")
    public int commitSelection(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "selectionId", targetNamespace = "")
        int selectionId);

    /**
     * 
     * @param selectionId
     * @param token
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "rollbackSelection", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.RollbackSelection")
    @ResponseWrapper(localName = "rollbackSelectionResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.RollbackSelectionResponse")
    public int rollbackSelection(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "selectionId", targetNamespace = "")
        int selectionId);

    /**
     * 
     * @param selectionId
     * @param token
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSelectionStatus", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetSelectionStatus")
    @ResponseWrapper(localName = "getSelectionStatusResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetSelectionStatusResponse")
    public int getSelectionStatus(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "selectionId", targetNamespace = "")
        int selectionId);

    /**
     * 
     * @param selectionId
     * @param token
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSelectionRealFilterId", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetSelectionRealFilterId")
    @ResponseWrapper(localName = "getSelectionRealFilterIdResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetSelectionRealFilterIdResponse")
    public int getSelectionRealFilterId(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "selectionId", targetNamespace = "")
        int selectionId);

    /**
     * 
     * @param selectionId
     * @param token
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSelectionTestFilterId", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetSelectionTestFilterId")
    @ResponseWrapper(localName = "getSelectionTestFilterIdResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetSelectionTestFilterIdResponse")
    public int getSelectionTestFilterId(
        @WebParam(name = "token", targetNamespace = "")
        AuthToken token,
        @WebParam(name = "selectionId", targetNamespace = "")
        int selectionId);

    /**
     * 
     * @param pagination
     * @param apiKey
     * @param userKey
     * @return
     *     returns com.contactlab.api.ws.domain.PageBuilderTemplates
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findPageBuilderTemplates", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindPageBuilderTemplates")
    @ResponseWrapper(localName = "findPageBuilderTemplatesResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindPageBuilderTemplatesResponse")
    public PageBuilderTemplates findPageBuilderTemplates(
        @WebParam(name = "apiKey", targetNamespace = "")
        String apiKey,
        @WebParam(name = "userKey", targetNamespace = "")
        String userKey,
        @WebParam(name = "pagination", targetNamespace = "")
        Pagination pagination);

    /**
     * 
     * @param pagination
     * @param apiKey
     * @param templateId
     * @param userKey
     * @return
     *     returns com.contactlab.api.ws.domain.PageBuilderPages
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findPageBuilderPages", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindPageBuilderPages")
    @ResponseWrapper(localName = "findPageBuilderPagesResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.FindPageBuilderPagesResponse")
    public PageBuilderPages findPageBuilderPages(
        @WebParam(name = "apiKey", targetNamespace = "")
        String apiKey,
        @WebParam(name = "userKey", targetNamespace = "")
        String userKey,
        @WebParam(name = "templateId", targetNamespace = "")
        int templateId,
        @WebParam(name = "pagination", targetNamespace = "")
        Pagination pagination);

    /**
     * 
     * @param apiKey
     * @param templateId
     * @param pageId
     * @param userKey
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPageBuilderPageContent", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetPageBuilderPageContent")
    @ResponseWrapper(localName = "getPageBuilderPageContentResponse", targetNamespace = "http://ws.api.contactlab.com/", className = "com.contactlab.api.ws.GetPageBuilderPageContentResponse")
    public String getPageBuilderPageContent(
        @WebParam(name = "apiKey", targetNamespace = "")
        String apiKey,
        @WebParam(name = "userKey", targetNamespace = "")
        String userKey,
        @WebParam(name = "templateId", targetNamespace = "")
        int templateId,
        @WebParam(name = "pageId", targetNamespace = "")
        int pageId);

}
